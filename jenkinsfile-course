@Library('UtilitiesCourse') _

pipeline{
    agent{
        label 'worker_node_course'
    }
    
    parameters{
        booleanParam(defaultValue: false, description: 'Deploy or not', name:'deploy_artifact')
        string(defaultValue: '', description: 'repository branch', name: 'rama')
    }
    
    stages{
    
        stage('Print params'){
            steps{
                echo "RAMA: ${params.rama}"
                echo "DEPLOY_ARTIFACT: ${params.deploy_artifact}"
            }
        }
        
        stage('Clean WS'){
            steps{
                cleanWs()
            }
        }
        stage('Download Source'){
            steps{
                git branch: "${params.rama}", url: 'https://github.com/pealcuadrado/maven-training.git'
            }
        }
        stage('Compile'){
            steps{
                mavenBuild "clean compile"
             }
        }
        stage('Unit test'){
            steps{
                mavenBuild "test"
             }
        }
        stage('Integration Test'){
            steps{
                mavenBuild "verify"
             }
        }
        stage('Deploy to Artifactory'){
            when{
                expression {
                    params.deploy_artifact == true
                }
            }
            steps{
                configFileProvider([configFile(fileId: 'artifactory-publishing-setting', variable: 'MAVEN_SETTINGS')]) {
                    mavenBuild '-s $MAVEN_SETTINGS -DskipTests=true deploy'
                }
            }
        }
    }
    post{
        always{
            junit allowEmptyResults: true, healthScaleFactor: 0.0, testResults: '**/target/*-reports/TEST-*.xml'
        }
    }
}
