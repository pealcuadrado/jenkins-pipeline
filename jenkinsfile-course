@Library('UtilitiesCourse') _

pipeline{
  agent {
    label 'worker_node_course'
   }
   
   parameters{
    booleanParam(defaultValue: false, description: 'check para deploy', name: 'deploy_artifact')
    string(defaultValue: '', description: 'Rama repo', name:'rama')
   }
   
  stages {
    stage('Print params'){
      steps{
        echo "RAMA: ${params.rama}"
        echo "DEPLOY: ${params.deploy_artifact}"
      }
    }
    
    stage('Clean WS'){
      steps{
        cleanWs()
      }
   }
   stage('Source'){
    steps{
        //Descargar codigo del repositorio Git
        git branch: "${params.rama}", url: 'https://github.com/pealcuadrado/maven-training.git'
      }
    }
   stage('Compile'){
     steps{
        //Ejecutar maven compile
        mavenBuild "clean compile"
     }
   }
   stage('Parallalel Tests'){
    parallel{
         stage('Unit testing'){
          steps{
            //Ejecución de tests unitarios
            mavenBuild "test"
          }
         }
         stage('Integration test'){
          steps{
            //Ejecución tests integración
            mavenBuild "verify"
          }
        }
      }
   }
    stage('Deploy'){
      when{
        expression{
          params.deploy_artifact == true
        }
      }
      steps{
        //Deploy to Artifactory
        configFileProvider([configFile(fileId: 'artifactory-publishing-settings', variable: 'MAVEN_SETTINGS')]) {
            mavenBuild '-s $MAVEN_SETTINGS -DskipTests=true deploy'
        }
      }
    }
  }
  post{
    always {
      junit allowEmptyResults: true, healthScaleFactor: 0.0, testResults: '**/target/*-reports/TEST-*.xml'   
    }
  }
}
