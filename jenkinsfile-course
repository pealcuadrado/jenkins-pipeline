@Library('UtilitiesCourse') _

pipeline{
    agent{
        label 'worker_node_course'
    }
    stages{
        stage("clean-ws"){
            steps{
                cleanWs()
            }
        }
        stage("Source"){
            steps{
                git branch: 'develop', url: 'https://github.com/pealcuadrado/maven-training.git'
            }
        }
        stage("Compile"){
            steps{
                mavenBuild "clean compile"
            }
        }
        stage("Unit Test"){
            steps{
                executeUnitTests()
            }
        }
        stage("Integration Test"){
            steps{
                script{
                    try{
                        mavenBuild "verify"
                    } finally{
                        junit allowEmptyResults: true, testResults: '**/target/*-reports/TEST-*.xml'
                    }
                }
            }
        }
        stage("Deploy"){
            steps{
                configFileProvider([configFile(fileId: 'artifactory-publishing-settings', variable: 'MAVEN_SETTINGS')]) {
                    mavenBuild '-s $MAVEN_SETTINGS -DskiptTests=true deploy'
                 }
            }
        }
    }
}

def executeUnitTests(){
    try{
        mavenBuild "test"
    }catch(err){
        junit allowEmptyResults: true, testResults: '**/target/*-reports/TEST-*.xml'
        throw err
    }
}
