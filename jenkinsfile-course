@Library('UtilitiesCourse') _

pipeline{
  agent {
    label 'worker_node_course'
   }
  stages {
    stage('Clean WS'){
      steps{
        cleanWs()
      }
   }
   stage('Source'){
    steps{
        //Descargar codigo del repositorio Git
        git branch: 'develop', url: 'https://github.com/pealcuadrado/maven-training.git'
      }
    }
   stage('Compile'){
     steps{
        //Ejecutar maven compile
        mavenBuild "clean compile"
     }
   }
   stage('Unit testing'){
    steps{
        //Ejecución de tests unitarios
        script{
          try{
              mavenBuild "test"
          } catch(err) {
              junit allowEmptyResults: true, healthScaleFactor: 0.0, testResults: '**/target/*-reports/TEST-*.xml'
              throw err
          }
        }
     }
   }
   stage('Integration test'){
    steps{
        //Ejecución tests integración
        script{
          try{
              mavenBuild "verify"
          } finally {
              junit allowEmptyResults: true, healthScaleFactor: 0.0, testResults: '**/target/*-reports/TEST-*.xml'
          }
        }
      }
    }
    stage('Deploy'){
      steps{
        //Deploy to Artifactory
        configFileProvider([configFile(fileId: 'artifactory-publishing-settings', variable: 'MAVEN_SETTINGS')]) {
            mavenBuild '-s $MAVEN_SETTINGS -DskipTests=true deploy'
        }
      }
    }
  }
}
  
    
