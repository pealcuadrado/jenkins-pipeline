@Library('UtilitiesCourse') _

pipeline{
    agent{
        label 'worker_node_course'
    }
    
    parameters{
        string(name:'rama', description: 'Rama a usar', defaultValue: '')
        booleanParam(name:'deploy_artifact', description: 'realizar deploy o no', defaultValue: false)
    }
    
    stages{
        stage("clean-ws"){
            steps{
                cleanWs()
            }
        }
        stage("print params"){
            steps{
                echo "RAMA: ${params.rama}"
                echo "DEPLOY_ARTIFACT: ${params.deploy_artifact}"
            }
        }
        stage("Source"){
            steps{
                git branch: "${params.rama}", url: 'https://github.com/pealcuadrado/maven-training.git'
            }
        }
        stage("Compile"){
            steps{
                mavenBuild "clean compile"
            }
        }
        stage("Parallel tests){
            parallel{
                stage("Unit Test"){
                    steps{
                        mavenBuild "test"
                    }
                }
                stage("Integration Test"){
                    steps{
                         mavenBuild "verify"
                    }
                }
            }
        }
        stage("Deploy"){
            when{
                expression {
                    params.deploy_artifact == true
                }
            }
            steps{
                configFileProvider([configFile(fileId: 'artifactory-publishing-settings', variable: 'MAVEN_SETTINGS')]) {
                    mavenBuild '-s $MAVEN_SETTINGS -DskiptTests=true deploy'
                 }
            }
        }
    }
    post{
        always{
            junit allowEmptyResults: true, testResults: '**/target/*-reports/TEST-*.xml'
        }
    }
}
