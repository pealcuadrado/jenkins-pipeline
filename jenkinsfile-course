@Library('Utilities2') _
pipeline{
    agent {
        label 'worker_node_course'
    }

    parameters{
        booleanParam(defaultValue: false, description: 'Hacer deploy o no', name: 'deploy_artifact')
        string(defaultValue: '', description: 'Branch para hacer Build', name: 'rama')
    }

    options{
        timeout(time: 10, unit: 'MINUTES')
    }

    stages{

        stage('Show Params'){
            steps{
                echo "BRANCH: ${params.rama}"
                echo "DEPLOY: ${params.deploy_artifact}"
            }
        }

        stage('Clean workspace'){
            steps{
                cleanWs()
            }
        }
        
        stage('Source'){
            steps{
                git branch: "${params.rama}", changelog: false, poll: false, url: 'https://github.com/pealcuadrado/maven-training'
            }
        }
        
        stage('Compile'){
            steps{
                mavenBuild "clean compile"
            }
        }
        
        stage('Parallel Tests'){
            parallel{
                stage('Unit test'){
                    steps{
                        mavenBuild "test"
                        sleep 60
                    }
                }
        
                stage('Integration Test'){
                    steps{
                        mavenBuild "verify"
                        sleep 60
                    }
                }
            }
            post{
                always {
                    junit allowEmptyResults: true, healthScaleFactor: 0.0, testResults: '**/target/*-reports/TEST-*.xml'
                }
            }
        }

        
        stage('Deploy'){
            when{
                expression {
                    params.deploy_artifact == true
                }
            }
            steps{
                configFileProvider([configFile(fileId: 'artifactory-publishing-settings', variable: 'MAVEN_SETTINGS')]) {
                    echo '$MAVEN_SETTINGS'
                    mavenBuild '-s $MAVEN_SETTINGS -DskipTrue=true deploy'
                }
            }
        }
    }
    
}
