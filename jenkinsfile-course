@Library('Utilities2') _
pipeline{
    agent {
        label 'worker_node_course'
    }

    stages{
        stage('Clean workspace'){
            steps{
                cleanWs()
            }
        }
        
        stage('Source'){
            steps{
                git branch: 'develop', changelog: false, poll: false, url: 'https://github.com/pealcuadrado/maven-training'
            }
        }
        
        stage('Compile'){
            steps{
                mavenBuild "clean compile"
            }
        }
        
        stage('Unit test'){
            steps{
                script{
                    try{
                        mavenBuild "test"
                    } catch(err){
                        junit allowEmptyResults: true, healthScaleFactor: 0.0, testResults: '**/target/*-reports/TEST-*.xml'
                        throw err
                    }
                }
            }
        }
        
        stage('Integration Test'){
            steps{
                mavenVerify()
            }
        }
        
        stage('Deploy'){
            steps{
                configFileProvider([configFile(fileId: 'artifactory-publishing-settings', variable: 'MAVEN_SETTINGS')]) {
                    echo '$MAVEN_SETTINGS'
                    mavenBuild '-s $MAVEN_SETTINGS -DskipTrue=true deploy'
                }
            }
        }
    }
    
}

def mavenVerify(){
    try{
        mavenBuild "verify"
    } finally{
        junit allowEmptyResults: true, healthScaleFactor: 0.0, testResults: '**/target/*-reports/TEST-*.xml'
    }
}
