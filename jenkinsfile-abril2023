@Library('Utilities2') _
pipeline{
    agent { label 'worker_node1' }
    
    paremeters{
        booleanParam(defaultValue: false, description: 'Ejecutar deploy o no', name: 'deploy_artifact')
        string(defaultValue: '', description: 'Nombre de la rama para build', name: 'rama')
    }
    
    options{
        timeout(time: 2, unit: 'MINUTES')
    }
    
    stages {
        stage('Init pipeline') {
            steps{
                cleanWs()
                echo "BRANCH: ${params.rama}"
                echo "DEPLOY: ${params.deploy_artifact}"
            }
        }
        
        stage('Source') {
            steps{
                // Get code from our git repository
                git branch: 'develop', url: 'https://github.com/pealcuadrado/maven-training.git'
            }
        }
        stage('Compile') {
            steps{
                // Run Maven to execute compile 
                mavenBuild "clean compile"
            }
        }
        stage('parallel tests'){
            parallel{
                stage('Unit test'){
                    steps{
                        mavenBuild "test"
                    }
                }
                stage('Integration Test'){
                    steps{
                        mavenBuild "verify"
                    }
                }
            }
            post{
                always{
                    junit allowEmptyResults: true, healthScaleFactor: 0.0, testResults: '**/target/*-reports/TEST-*.xml'
                }
           }
        }
        stage('deploy'){
            steps{
                configFileProvider([configFile(fileId: 'artifactory-publishing-settings', variable: 'MAVEN_SETTINGS')]) {
                    mavenBuild '-s $MAVEN_SETTINGS -DskipTests=true deploy'
                }  
            }     
        }
    }
}
